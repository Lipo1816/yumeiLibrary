// <auto-generated />
using System;
using CommonLibraryP.MachinePKG;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommonLibraryP.Migrations
{
    [DbContext(typeof(MachineDBContext))]
    [Migration("20251007062613_AddProductionGroupToDataPersonPermissions")]
    partial class AddProductionGroupToDataPersonPermissions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.BreakTimeSchedule", b =>
                {
                    b.Property<string>("LineName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WeekDay")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PeriodNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("LineName", "WeekDay", "PeriodNo", "ModifyTime");

                    b.ToTable("BreakTimeSchedules");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.CarbonGeneratorParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("CarbonFactor")
                        .HasColumnType("float");

                    b.Property<double?>("Current")
                        .HasColumnType("float");

                    b.Property<double?>("Electricity")
                        .HasColumnType("float");

                    b.Property<string>("GeneratorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RatedPower")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RecordTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Voltage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CarbonGeneratorParameters");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.Data_Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("人員")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("品管看板")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("工單報工")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("工單看板")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("群組")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("設備看板")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("設備管理")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("設備點檢")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("資料分析")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("資料設定")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Data_Permissions");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.Data_Person_Permissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("人員")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("人員ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("人員姓名")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("品管看板")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("工單報工")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("工單看板")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("生產組名")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("設備看板")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("設備管理")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("設備點檢")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("資料分析")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("資料設定")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataPersonPermissions");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.EmailSentSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ischoose")
                        .HasColumnType("bit");

                    b.Property<string>("人員ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("建立時間")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmailSentSettings");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.EquiManufacturer_Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PLC項目")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("廠商MAIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("廠商電話")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機台名稱")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機台編號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機種代碼")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("線別編號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("設備廠商")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("購入日期")
                        .HasColumnType("datetime2");

                    b.Property<string>("電控箱")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquiManufacturer_Information", (string)null);
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.EquipmentSpecLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("機台名稱")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機台編號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機台項目代碼")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機台項目說明")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機種代碼")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("水溫上限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("水溫下限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("線別編號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("規格型號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("說明1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("資訊項目")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("轉速上限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("轉速下限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("電壓上限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("電壓下限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("電控制箱IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("電控制箱編號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("電流上限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("電流下限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("項目")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("頻率上限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("頻率下限")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentSpecLimits");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.InspecWOList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("NG數量")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("result")
                        .HasColumnType("bit");

                    b.Property<string>("備註")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("分類")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("報工人員")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("報工時間")
                        .HasColumnType("datetime2");

                    b.Property<string>("工單")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("改善時間")
                        .HasColumnType("datetime2");

                    b.Property<int?>("檢查數量")
                        .HasColumnType("int");

                    b.Property<int>("狀態")
                        .HasColumnType("int");

                    b.Property<DateTime>("產生時間")
                        .HasColumnType("datetime2");

                    b.Property<string>("責任單位")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("錯誤代碼")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("錯誤項目")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("點檢單號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("點檢時間")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("InspecWOLists");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.Inspection", b =>
                {
                    b.Property<string>("機台編號")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("項目")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("方式")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("標準")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機台名稱")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("檢查")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("紀錄值")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("頻率")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("點檢位置")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("機台編號", "項目");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.InspectionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("單號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("完成時間")
                        .HasColumnType("datetime2");

                    b.Property<string>("機台名稱")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機台編號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("檢查人")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("檢查結果")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("產生時間")
                        .HasColumnType("datetime2");

                    b.Property<int>("表單狀態")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InspectionLists");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.InspectionRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("完成時間")
                        .HasColumnType("datetime2");

                    b.Property<string>("方式")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("標準")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機台名稱")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機台編號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("檢查")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("檢查人")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("檢查單號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("檢查錯誤")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("檢查點位")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("產生時間")
                        .HasColumnType("datetime2");

                    b.Property<string>("紀錄值")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("結果")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("維修期限")
                        .HasColumnType("datetime2");

                    b.Property<int>("表單狀態")
                        .HasColumnType("int");

                    b.Property<string>("項目")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InspectionRecords");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.InspectionReportTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("DailyEnable")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("DailyTime")
                        .HasColumnType("time");

                    b.Property<int?>("MonthlyDay")
                        .HasColumnType("int");

                    b.Property<bool?>("MonthlyEnable")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("MonthlyTime")
                        .HasColumnType("time");

                    b.Property<int?>("QuarterDay")
                        .HasColumnType("int");

                    b.Property<bool?>("QuarterEnable")
                        .HasColumnType("bit");

                    b.Property<int?>("QuarterHour")
                        .HasColumnType("int");

                    b.Property<int?>("QuarterMonth")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeeklyDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("WeeklyEnable")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("WeeklyTime")
                        .HasColumnType("time");

                    b.Property<int?>("YearDay")
                        .HasColumnType("int");

                    b.Property<bool?>("YearEnable")
                        .HasColumnType("bit");

                    b.Property<int?>("YearHour")
                        .HasColumnType("int");

                    b.Property<int?>("YearMonth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InspectionReportTimes");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.Inspection_WoItem", b =>
                {
                    b.Property<string>("點檢單號")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(0);

                    b.Property<string>("點檢項目")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("備註")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("分類")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("結果")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<string>("責任單位")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("錯誤代碼")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("錯誤項目")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("點檢內容")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("點檢時間")
                        .HasColumnType("datetime2");

                    b.HasKey("點檢單號", "點檢項目");

                    b.ToTable("Inspection_WoItem");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.Personnal", b =>
                {
                    b.Property<string>("人員ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("人員姓名")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("權限")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("權限頁面")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("生產組名")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("職級代號")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("職級名稱")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("部門ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("部門名稱")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("人員ID");

                    b.ToTable("Personnal", (string)null);
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.ProblemDescript", b =>
                {
                    b.Property<string>("不良代碼")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("不良描述")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("不良類型")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("不良類型代碼")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("不良代碼");

                    b.ToTable("ProblemDescripts");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.ReportWorkOrder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("品名")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("報工人員")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("報工時間")
                        .HasColumnType("datetime2");

                    b.Property<string>("工單")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("已完成料")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("廢料")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("排產日")
                        .HasColumnType("datetime2");

                    b.Property<string>("狀態")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("補料")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("餘料")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("ID");

                    b.ToTable("ReportWorkOrders");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.TagRecordData", b =>
                {
                    b.Property<string>("tagName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("saveDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("tagID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("tagName");

                    b.ToTable("TagRecordDatas");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.WorkOrderPersonRecord", b =>
                {
                    b.Property<string>("姓名")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0);

                    b.Property<string>("工單")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("時間")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(2);

                    b.Property<string>("狀態")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("姓名", "工單", "時間");

                    b.ToTable("WorkOrderPersonRecords");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.Workorder", b =>
                {
                    b.Property<string>("工單號")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Updatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("出貨日")
                        .HasColumnType("datetime2");

                    b.Property<int>("分盒數")
                        .HasColumnType("int");

                    b.Property<decimal>("分盒總重量")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("品名")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("客戶編號")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("工單發料量")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("工單計算方式")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("排產日")
                        .HasColumnType("datetime2");

                    b.Property<string>("料號")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("標準工時")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("物料採購單1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("物料採購單2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("物料採購單3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("生產組別")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("生產線別")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("發料儲位")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("製程程式")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("訂單號")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("工單號");

                    b.ToTable("Workorders", (string)null);
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.WorkorderCheck", b =>
                {
                    b.Property<string>("工單號")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("出貨日")
                        .HasColumnType("datetime2");

                    b.Property<int>("分盒數")
                        .HasColumnType("int");

                    b.Property<decimal>("分盒總重量")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("品名")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("客戶編號")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("工單發料量")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("工單計算方式")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("排產日")
                        .HasColumnType("datetime2");

                    b.Property<string>("料號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("標準工時")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("物料採購單1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("物料採購單2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("物料採購單3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("生產組別")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("生產線別")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("生產輔具1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("生產輔具2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("生產輔具3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("生產輔具4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("生產輔具5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("產品生產SOP1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("產品生產SOP2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("產品生產SOP3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("產品生產SOP4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("產品生產SOP5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("發料儲位")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("製程程式")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("訂單號")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("點檢單號")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("工單號");

                    b.ToTable("WorkorderChecks");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.WorkorderList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("報工人員")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("報工時間")
                        .HasColumnType("datetime2");

                    b.Property<string>("工單號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("狀態")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkorderLists");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.temprature_Hu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MachineGroupNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("battery_high")
                        .HasColumnType("float");

                    b.Property<double?>("battery_low")
                        .HasColumnType("float");

                    b.Property<double?>("humidity_high")
                        .HasColumnType("float");

                    b.Property<double?>("humidity_low")
                        .HasColumnType("float");

                    b.Property<double?>("temperature_high")
                        .HasColumnType("float");

                    b.Property<double?>("temperature_low")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("temprature_Hus");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EFModel.temprature_Hu_log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachineGroupNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("battery")
                        .HasColumnType("float");

                    b.Property<double?>("humidity")
                        .HasColumnType("float");

                    b.Property<double?>("temperature")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("temprature_Hu_logs");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.EquipmentSpec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PLC_XY位址")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PLC讀值位址ModbusAdd")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PLC讀值型態")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("條件或格式")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("機台名稱")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("機台編號")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("機台項目代碼")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("機台項目說明")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("機種代碼")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("線別編號")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("規格型號")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("說明1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("資訊項目")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("電控制箱IP")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("電控制箱編號")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("項目")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentSpecs", (string)null);
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<int>("ConnectionType")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("Enabled");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP");

                    b.Property<int>("MaxRetryCount")
                        .HasColumnType("int")
                        .HasColumnName("MaxRetryCount");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<bool>("RecordStatusChanged")
                        .HasColumnType("bit")
                        .HasColumnName("RecordStatusChanged");

                    b.Property<Guid?>("TagCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TagCategoryID");

                    b.Property<int>("UpdateDelay")
                        .HasColumnType("int")
                        .HasColumnName("UpdateDelay");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TagCategoryId");

                    b.ToTable("Machine", (string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.MachineStatusLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LogTime");

                    b.Property<Guid>("MachineID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MachineID");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("MachineStatusLogs", (string)null);
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.ModbusSlaveConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ip");

                    b.Property<int>("Port")
                        .HasColumnType("int")
                        .HasColumnName("Port");

                    b.Property<int>("Station")
                        .HasColumnType("int")
                        .HasColumnName("Station");

                    b.HasKey("Id");

                    b.ToTable("ModbusSlaveConfigs", (string)null);
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.Tag", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("UpdateByTime")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.TagCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<int>("ConnectionType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TagCategory", (string)null);
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.ModbusTCPTag", b =>
                {
                    b.HasBaseType("CommonLibraryP.MachinePKG.Tag");

                    b.Property<bool>("InputOrOutput")
                        .HasColumnType("bit");

                    b.Property<int>("Offset")
                        .HasColumnType("int");

                    b.Property<int>("StartIndex")
                        .HasColumnType("int");

                    b.Property<byte>("Station")
                        .HasColumnType("tinyint");

                    b.Property<bool>("StringReverse")
                        .HasColumnType("bit");

                    b.ToTable("ModbusTCPTags");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.Machine", b =>
                {
                    b.HasOne("CommonLibraryP.MachinePKG.TagCategory", "TagCategory")
                        .WithMany("Machines")
                        .HasForeignKey("TagCategoryId");

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.Tag", b =>
                {
                    b.HasOne("CommonLibraryP.MachinePKG.TagCategory", "Category")
                        .WithMany("Tags")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CommonLibraryP.MachinePKG.TagCategory", b =>
                {
                    b.Navigation("Machines");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
